// <auto-generated />
using System;
using Leha.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Leha.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240408214105_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Leha.Data.Entities.BoardMember", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BoardMemberImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BoardMemberName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BoardMemberPosition")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BoardMembers", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.BoardMemberSpeech", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BoardMemberID")
                        .HasColumnType("int");

                    b.Property<string>("BoardMemberSpeechContent")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BoardMemberID");

                    b.ToTable("BoardMemberSpeeches", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ClientImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ClientNameAr")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)");

                    b.Property<string>("ClientNameEn")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("CompanyEmployees")
                        .HasColumnType("int");

                    b.Property<string>("CompanyImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyLink")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.CompanyAddress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("CompanyAddresses", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Form", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FormAddress")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FormCV")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("FormDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FormFullName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FormJobTitle")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("JobID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.ToTable("Forms", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.HomeImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("HomeImageBytes")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("HomeImages", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("JobAverageSalary")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("JobDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.PhaseItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("ActualInventoryQuantities")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AcumulativePercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ExecutionProgress")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("InitialInventoryQuantities")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PercentageLossOrExceed")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PhaseItemName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PhaseItemNumber")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("ProgressPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProjectPhaseID")
                        .HasColumnType("int");

                    b.Property<string>("RFI")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("WIR")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectPhaseID");

                    b.ToTable("PhaseItems", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("PostDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PostImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Posts", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectAddress")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProjectImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("ProjectProgressPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SiteEngineerName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.ProjectPhase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectPhaseName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectPhases", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ServiceImage")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Servcies", (string)null);
                });

            modelBuilder.Entity("Leha.Data.Entities.BoardMemberSpeech", b =>
                {
                    b.HasOne("Leha.Data.Entities.BoardMember", "BoardMember")
                        .WithMany("BoardMemberSpeeches")
                        .HasForeignKey("BoardMemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardMember");
                });

            modelBuilder.Entity("Leha.Data.Entities.Client", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("Clients")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.CompanyAddress", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("CompanyAddresses")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.Form", b =>
                {
                    b.HasOne("Leha.Data.Entities.Job", "Job")
                        .WithMany("Forms")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Leha.Data.Entities.HomeImage", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("HomeImages")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.Job", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.PhaseItem", b =>
                {
                    b.HasOne("Leha.Data.Entities.ProjectPhase", "ProjectPhase")
                        .WithMany("PhaseItems")
                        .HasForeignKey("ProjectPhaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectPhase");
                });

            modelBuilder.Entity("Leha.Data.Entities.Post", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("Posts")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.Product", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.Project", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.ProjectPhase", b =>
                {
                    b.HasOne("Leha.Data.Entities.Project", "Project")
                        .WithMany("ProjectPhases")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Leha.Data.Entities.Service", b =>
                {
                    b.HasOne("Leha.Data.Entities.Company", "Company")
                        .WithMany("Services")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Leha.Data.Entities.BoardMember", b =>
                {
                    b.Navigation("BoardMemberSpeeches");
                });

            modelBuilder.Entity("Leha.Data.Entities.Company", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("CompanyAddresses");

                    b.Navigation("HomeImages");

                    b.Navigation("Jobs");

                    b.Navigation("Posts");

                    b.Navigation("Products");

                    b.Navigation("Projects");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Leha.Data.Entities.Job", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("Leha.Data.Entities.Project", b =>
                {
                    b.Navigation("ProjectPhases");
                });

            modelBuilder.Entity("Leha.Data.Entities.ProjectPhase", b =>
                {
                    b.Navigation("PhaseItems");
                });
#pragma warning restore 612, 618
        }
    }
}
